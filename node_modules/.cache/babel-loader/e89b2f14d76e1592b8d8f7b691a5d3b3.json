{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/C8EE989BEE98837C/Django Projects/react-first/my-app/src/mycomponents/Login.js\";\nimport React, { Component } from \"react\";\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport Nav from \"./Nav\";\nimport Footer from \"./Footer\";\nimport { Redirect } from \"../../../node_modules/react-router-dom\";\nimport className from \"../../../node_modules/classnames\";\n\nclass Login extends Component {\n  constructor(prop) {\n    super(prop);\n\n    this.onChangeHandler = event => {\n      var inputName = event.target.name;\n      var inputValue = event.target.value;\n      this.setState({\n        [inputName]: inputValue\n      });\n\n      if (inputName === \"email\") {\n        if (!this.emailValidation(inputValue)) {\n          this.setState({\n            emailMgs: \"* Invalid Email\",\n            emailError: false\n          });\n        } else {\n          this.setState({\n            emailMgs: \"\",\n            emailError: true\n          });\n        }\n      }\n    };\n\n    this.state = {\n      email: null,\n      password: null,\n      login: false,\n      store: null,\n      passwordError: true,\n      emailError: true,\n      emailMgs: \"\",\n      passMgs: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const user = localStorage.getItem(\"login\"); // your saved token in localstorage\n\n    if (user && user !== \"undefined\") {\n      // check for not undefined\n      this.props.history.push(\"/\"); // now you can redirect your desired route\n    }\n  }\n\n  loginButtonPressed() {\n    if (this.state.emailError) {\n      this.login();\n    }\n  }\n\n  emailValidation(email) {\n    const re = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  login() {\n    var formdata = new FormData();\n    formdata.append(\"email\", this.state.email);\n    formdata.append(\"password\", this.state.password);\n    var requestOptions = {\n      method: \"POST\",\n      body: formdata,\n      redirect: \"follow\"\n    };\n    fetch(\"https://exampleblogforgrayit.herokuapp.com/api/token/\", requestOptions).then(response => response.json()).then(result => {\n      if (result.access) {\n        //console.warn(\"results\", result);\n        localStorage.setItem(\"login\", JSON.stringify({\n          login: true,\n          store: result.access,\n          email: this.state.email\n        }));\n        console.log(\"ok\");\n        this.setState({\n          login: true\n        });\n      } else {\n        alert(\"Username or password incorrect\");\n      }\n    }).catch(error => console.log(\"error\", error));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container all-margin-top minimum-height\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mt-5 mb-3 text-left\",\n          children: [\"Login\", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \" Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-4 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              name: \"sentMessage\",\n              id: \"contactForm\",\n              className: \"text-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"control-group form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"controls\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Email*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    className: className(\"form-control\", !this.state.emailError && \"is-invalid\"),\n                    id: \"email\",\n                    name: \"email\",\n                    onChange: this.onChangeHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"invalid_input\",\n                    children: this.state.emailMgs\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"control-group form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"controls\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Password*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    className: \"form-control\",\n                    id: \"password\",\n                    name: \"password\",\n                    onChange: this.onChangeHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {\n                  this.loginButtonPressed();\n                },\n                className: \"btn btn-primary\",\n                id: \"login-btn\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), this.state.login ? /*#__PURE__*/_jsxDEV(Redirect, {\n                to: \"/posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 64\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/mnt/C8EE989BEE98837C/Django Projects/react-first/my-app/src/mycomponents/Login.js"],"names":["React","Component","Nav","Footer","Redirect","className","Login","constructor","prop","onChangeHandler","event","inputName","target","name","inputValue","value","setState","emailValidation","emailMgs","emailError","state","email","password","login","store","passwordError","passMgs","componentDidMount","user","localStorage","getItem","props","history","push","loginButtonPressed","re","test","String","toLowerCase","formdata","FormData","append","requestOptions","method","body","redirect","fetch","then","response","json","result","access","setItem","JSON","stringify","console","log","alert","catch","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport Nav from \"./Nav\";\nimport Footer from \"./Footer\";\nimport { Redirect } from \"../../../node_modules/react-router-dom\";\nimport className from \"../../../node_modules/classnames\";\nclass Login extends Component {\n  constructor(prop) {\n    super(prop);\n    this.state = {\n      email: null,\n      password: null,\n      login: false,\n      store: null,\n      passwordError: true,\n      emailError: true,\n      emailMgs: \"\",\n      passMgs: \"\",\n    };\n  }\n  componentDidMount() {\n    const user = localStorage.getItem(\"login\"); // your saved token in localstorage\n    if (user && user !== \"undefined\") {\n      // check for not undefined\n      this.props.history.push(\"/\"); // now you can redirect your desired route\n    }\n  }\n  onChangeHandler = (event) => {\n    var inputName = event.target.name;\n    var inputValue = event.target.value;\n    this.setState({\n      [inputName]: inputValue,\n    });\n    if (inputName === \"email\") {\n      if (!this.emailValidation(inputValue)) {\n        this.setState({\n          emailMgs: \"* Invalid Email\",\n          emailError: false,\n        });\n      } else {\n        this.setState({\n          emailMgs: \"\",\n          emailError: true,\n        });\n      }\n    }\n  };\n  loginButtonPressed() {\n    if (this.state.emailError) {\n      this.login();\n    }\n  }\n  emailValidation(email) {\n    const re = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n    return re.test(String(email).toLowerCase());\n  }\n  login() {\n    var formdata = new FormData();\n    formdata.append(\"email\", this.state.email);\n    formdata.append(\"password\", this.state.password);\n\n    var requestOptions = {\n      method: \"POST\",\n      body: formdata,\n      redirect: \"follow\",\n    };\n\n    fetch(\"https://exampleblogforgrayit.herokuapp.com/api/token/\", requestOptions)\n      .then((response) => response.json())\n      .then((result) => {\n        if (result.access) {\n          //console.warn(\"results\", result);\n          localStorage.setItem(\n            \"login\",\n            JSON.stringify({\n              login: true,\n              store: result.access,\n              email: this.state.email,\n            })\n          );\n          console.log(\"ok\");\n          this.setState({ login: true });\n        } else {\n          alert(\"Username or password incorrect\");\n        }\n      })\n      .catch((error) => console.log(\"error\", error));\n  }\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <div className=\"container all-margin-top minimum-height\">\n          <div className=\"mt-5\"></div>\n          <h1 className=\"mt-5 mb-3 text-left\">\n            Login\n            <small> Form</small>\n          </h1>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item active\">Login</li>\n          </ol>\n\n          <div className=\"row\">\n            <div className=\"col-lg-4 mb-4\">\n              <form name=\"sentMessage\" id=\"contactForm\" className=\"text-left\">\n                <div className=\"control-group form-group\">\n                  <div className=\"controls\">\n                    <label>Email*</label>\n                    <input\n                      type=\"email\"\n                      className={className(\n                        \"form-control\",\n                        !this.state.emailError && \"is-invalid\"\n                      )}\n                      id=\"email\"\n                      name=\"email\"\n                      onChange={this.onChangeHandler}\n                    ></input>\n                    <small className=\"invalid_input\">\n                      {this.state.emailMgs}\n                    </small>\n                  </div>\n                </div>\n                <div className=\"control-group form-group\">\n                  <div className=\"controls\">\n                    <label>Password*</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"password\"\n                      name=\"password\"\n                      onChange={this.onChangeHandler}\n                    ></input>\n                  </div>\n                </div>\n                <div id=\"success\"></div>\n\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    this.loginButtonPressed();\n                  }}\n                  className=\"btn btn-primary\"\n                  id=\"login-btn\"\n                >\n                  Login\n                </button>\n                {this.state.login ? <Redirect to=\"/posts\" /> : <div></div>}\n              </form>\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}